import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import os
import json

# Bot tokeni
bot_token = '6875645552:AAFeqRGSXT6wUtXQBu6cGfyLRfaY9iypJ8s'
bot = telebot.TeleBot(bot_token)

# Admin user ID ro'yxati
ADMIN_IDS = [6526619898, 5888593248]  # Adminlarning Telegram user IDlarini bu yerga kiriting

# Video fayllarni saqlash uchun yo'l
video_files = {}

# Video fayllarini yuklash
def load_video_files():
    global video_files
    if os.path.exists('videos.json'):
        with open('videos.json', 'r') as f:
            video_files = json.load(f)

# Video fayllarini saqlash
def save_video_files():
    with open('videos.json', 'w') as f:
        json.dump(video_files, f)

# Webhookni o'chirish
bot.remove_webhook()

# /start buyrug'i uchun javob berish
@bot.message_handler(commands=['start'])
def start(message):
    # Tugma qo'shish
    keyboard = InlineKeyboardMarkup()
    join_channel_button = InlineKeyboardButton("Kanalga azo bo'lish", url="https://t.me/premium_mojies")
    confirm_button = InlineKeyboardButton("Obuna bo'ldim", callback_data="confirm_subscription")
    keyboard.row(join_channel_button)
    keyboard.row(confirm_button)
    
    bot.send_message(message.chat.id, "Assalomu alaykum! Kanalga azo bo'lish uchun quyidagi tugmani bosing:", reply_markup=keyboard)

# "Obuna bo'ldim" tugmasi uchun callback query
@bot.callback_query_handler(func=lambda call: call.data == "confirm_subscription")
def confirm_subscription(call):
    try:
        # Kanalga azo bo'linganini qayta tekshirish
        channel_username = "@premium_mojies"  # Kanalingiz usernami
        user_id = call.from_user.id
        member = bot.get_chat_member(channel_username, user_id)
        
        if member.status == 'left':
            bot.answer_callback_query(call.id, "Siz kanalga hali azo bo'lmagansiz!")
        else:
            # Foydalanuvchi kanalga azo bo'lgan bo'lsa, avvalgi xabarni o'chirib tashlash
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            # Menyu ko'rsatish
            show_menu(call.message)
    
    except Exception as e:
        bot.answer_callback_query(call.id, f"Xatolik yuz berdi: {e}")

# Menyu ko'rsatish funksiyasi
def show_menu(message):
    # Menyu elementlarini qo'shish
    menu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    for key in video_files.keys():
        menu_keyboard.add(KeyboardButton(key))
    bot.send_message(message.chat.id, "Bizning bo'timizga xush kelibsiz:", reply_markup=menu_keyboard)

# Adminni tekshirish funksiyasi
def check_admin(user_id):
    return user_id in ADMIN_IDS

# Fayl qo'shish uchun handler (faqat adminlar uchun)
@bot.message_handler(content_types=['video'])
def handle_video(message):
    if check_admin(message.from_user.id):
        # Faylni saqlash
        video_file_id = message.video.file_id
        file_info = bot.get_file(video_file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        # Fayl nomini olish
        file_name = message.video.file_name
        if file_name is None:
            file_name = f"video_{message.video.file_id}.mp4"
        
        file_path = os.path.join("videos", file_name)
        os.makedirs(os.path.dirname(file_path), exist_ok=True)  # Yangi katalog yaratish
        with open(file_path, 'wb') as new_file:
            new_file.write(downloaded_file)

        # Fayl nomini menyuga qo'shish
        video_key = f"{len(video_files) + 1}- qism"
        video_files[video_key] = file_path
        save_video_files()  # Video fayllarni saqlash
        
        # Menu yangilash
        bot.send_message(message.chat.id, f"Video fayl saqlandi va menyuga qo'shildi: {video_key}")
        show_menu(message)  # Menyuni yangilash
    else:
        bot.reply_to(message, "Siz admin emassiz, bu faylni yuklash imkoniyati yo'q.")

# Menyu variantlari uchun handler
@bot.message_handler(func=lambda message: message.text in video_files.keys())
def menu_options(message):
    video_path = video_files.get(message.text)
    if video_path and os.path.exists(video_path):
        with open(video_path, 'rb') as video:
            bot.send_video(message.chat.id, video)
    else:
        bot.send_message(message.chat.id, "Video fayl topilmadi!")

# Botni ishga tushurishdan oldin video fayllarni yuklash
load_video_files()

# Botni ishga tushurish
bot.polling(non_stop=True)
